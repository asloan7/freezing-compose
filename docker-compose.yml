version: '3'
#
volumes:
  freezing-data:
    external: true
  beanstalkd-data:
    external: true
  nginx-config:
  nginx-certs:
  nginx-vhosts:
  nginx-webroot:

services:

  # The database is not expected to be part of this set of containers.
  #
  # You can either run this directly on the host or in a container by adding in
  # the docker-comopse.devsupport.yml file:
  #
  #  docker-compose -f docker-compose.yml -f docker-compose.devsupport.yml up

  # ----------------------------------------------------------------------------
  # Infrastructure containers
  # ----------------------------------------------------------------------------

  logspout:
    image: gliderlabs/logspout
    hostname: freezing-logspout
    container_name: freezing-logspout
    command: "syslog+tcp://logs-01.loggly.com:514"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      SYSLOG_STRUCTURED_DATA: "${LOGGLY_TOKEN}@41058 tag=\"digitalocean\""
    restart: unless-stopped

  beanstalkd:
    build: ./docker-beanstalkd
    hostname: freezing-beanstalkd
    container_name: freezing-beanstalkd
    ports:
      - "11300:11300"
    volumes:
      - beanstalkd-data:/data
    restart: unless-stopped

  nginx:
    image: nginx:stable
    container_name: freezing-nginx
    ports:
      - "80:80"
      - '443:443'
    volumes:
      - 'nginx-config:/etc/nginx/conf.d'
      - 'nginx-certs:/etc/nginx/certs'
      - 'nginx-vhosts:/etc/nginx/vhost.d'
      - 'nginx-webroot:/usr/share/nginx/html'
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    restart: unless-stopped

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: freezing-nginx-letsencrypt
    hostname: freezing-nginx-letsencrypt
    # We don't need the environment since we're using labels.
    # environment:
    #   NGINX_DOCKER_GEN_CONTAINER: nginx-docker-gen
    volumes:
      - 'nginx-config:/etc/nginx/conf.d'
      - 'nginx-certs:/etc/nginx/certs'
      - 'nginx-vhosts:/etc/nginx/vhost.d'
      - 'nginx-webroot:/usr/share/nginx/html'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    restart: unless-stopped

  nginx-docker-gen:
    image: jwilder/docker-gen
    container_name: freezing-nginx-docker-gen
    hostname: freezing-nginx-docker-gen
    command: -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes:
      - 'nginx-config:/etc/nginx/conf.d'
      - 'nginx-certs:/etc/nginx/certs'
      - 'nginx-vhosts:/etc/nginx/vhost.d'
      - 'nginx-webroot:/usr/share/nginx/html'
      - '/var/run/docker.sock:/tmp/docker.sock:ro'
      - './web/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl'
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen"
    restart: unless-stopped

  # ----------------------------------------------------------------------------
  # Application Containers
  # ----------------------------------------------------------------------------

  freezing-sync:
    image: freezingsaddles/freezing-sync:latest
    hostname: freezing-sync
    container_name: freezing-sync
    links:
      - beanstalkd:beanstalkd.container
    environment:
      DEBUG: ${DEBUG}
      BEANSTALKD_HOST: beanstalkd.container
      BEANSTALKD_PORT: 11300
      SQLALCHEMY_URL: ${SQLALCHEMY_URL}
      STRAVA_CLIENT_ID: ${STRAVA_CLIENT_ID}
      STRAVA_CLIENT_SECRET: ${STRAVA_CLIENT_SECRET}
      WUNDERGROUND_API_KEY: ${WUNDERGROUND_API_KEY}
      TEAMS: ${TEAMS}
      OBSERVER_TEAMS: ${OBSERVER_TEAMS}
      START_DATE: ${START_DATE}
      END_DATE: ${END_DATE}
    volumes:
      - ./sync-data:/data
    restart: unless-stopped

  freezing-nq:
    image: freezingsaddles/freezing-nq:latest
    hostname: freezing-nq
    container_name: freezing-nq
    links:
      - beanstalkd:beanstalkd.container
    environment:
      VIRTUAL_HOST: ${FREEZING_NQ_FQDN}
      LETSENCRYPT_HOST: ${FREEZING_NQ_FQDN}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      DEBUG: ${DEBUG}
      BEANSTALKD_HOST: beanstalkd.container
      BEANSTALKD_PORT: 11300
      STRAVA_VERIFY_TOKEN: ${STRAVA_VERIFY_TOKEN}
    restart: unless-stopped

  freezing-web:
    image: freezingsaddles/freezing-web:latest
    hostname: freezing-web
    container_name: freezing-web
    links:
      - beanstalkd:beanstalkd.container
    environment:
      VIRTUAL_HOST: ${FREEZING_WEB_FQDN}
      LETSENCRYPT_HOST: ${FREEZING_WEB_FQDN}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      SQLALCHEMY_URL: ${SQLALCHEMY_URL}
      BEANSTALKD_HOST: beanstalkd.container
      BEANSTALKD_PORT: 11300
      STRAVA_CLIENT_ID: ${STRAVA_CLIENT_ID}
      STRAVA_CLIENT_SECRET: ${STRAVA_CLIENT_SECRET}
      TEAMS: ${TEAMS}
      OBSERVER_TEAMS: ${OBSERVER_TEAMS}
      START_DATE: ${START_DATE}
      END_DATE: ${END_DATE}
      TIMEZONE: ${TIMEZONE:-America/New_York}
    restart: unless-stopped
